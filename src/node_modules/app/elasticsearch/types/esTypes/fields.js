import {
	_shape,
	arrayOf,
	constant,
	numberWithin,
	object,
	objectOf,
	string,
} from 'app/elasticsearch/types/genericTypes';

/* ES date fields */

export const date = {
	..._shape('date'),
	...string,
};

// 2018-06-29
export const Date_YYYYMMDD_dash = {
	..._shape('Date_YYYYMMDD_dash'),
	...string,
	format: constant({type: string, value: 'YYYY-MM-DD'}),
	regex: /\d{4}-\d{2}-\d{2}/gu
};

// 2018-06-29 15:27:10
export const Date_YYYYMMDD_dash_time = {
	..._shape('Date_YYYYMMDD_dash_time'),
	...string,
	format: constant({type: string, value: 'YYYY-MM-DD hh:mm:ss'}),
	regex: /\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}/gu
};

/*
Geo-point datatype
https://www.elastic.co/guide/en/elasticsearch/reference/7.4/geo-point.html

{
  "text": "Geo-point as an object",
  "location": {
    "lat": 41.12,
    "lon": -71.34
  }
}

{
  "text": "Geo-point as a string",
  "location": "41.12,-71.34"
}

{
  "text": "Geo-point as a geohash",
  "location": "drm3btev3e86"
}

{
  "text": "Geo-point as an array",
  "location": [ -71.34, 41.12 ]
}

{
  "text": "Geo-point as a WKT POINT primitive",
  "location" : "POINT (-71.34 41.12)"
}
*/

export const geoPointObj = objectOf({
	lat: numberWithin([-90, 90]),
	lon:  numberWithin([-180, 180]),
});

/* ES string fields */

export const keyword = {
	..._shape('keyword'),
	...string,
};
export const keywordArray = arrayOf(keyword);

export const objectArray = arrayOf(object);

export const text = {
	..._shape('text'),
	...string,
};
export const textArray = arrayOf(text);

export const textWithKeyword = {
	..._shape('text_w_keyword'),
	...string,
};
export const textWithKeywordArray = arrayOf(textWithKeyword);

export const urlString = {
	..._shape('URL'),
	...string,
	// eslint-disable-next-line prefer-named-capture-group
	regex: /[(http(s)?)://(www.)?a-zA-Z0-9@:%._+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/gu
};
