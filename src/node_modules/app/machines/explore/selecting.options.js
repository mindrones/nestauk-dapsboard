import * as _ from 'lamb';
import {toggleItem} from '@svizzle/utils';
import {get} from 'svelte/store';
import {assign, send} from 'xstate';

const selectFields = (ctx, {fields}) => {
	ctx.selectedFields.set(fields);
	return ctx;
}

const toggleField = (ctx, {field}) => {
	ctx.selectedFields.update(fields => toggleItem(fields, field));
	return ctx;
}

const selectNextField = ctx => {
	ctx.selectedFields.update(_.setAt(-1, get(ctx.nextPair)[0]));
	return ctx;
}

const selectPreviousField = ctx => {
	ctx.selectedFields.update(_.setAt(-1, get(ctx.prevPair)[0]));
	return ctx;
}

// example aggs to be updated when we'll have the function `selectionToAggs`
// works for NIH
const updateQuery = ctx => {
	ctx.query.set({
		size: 0,
		aggs: {
			'agg-1': {
				extended_stats: {
					field: 'cost_total_project'
				}
			},
			'agg-2': {
				histogram: {
					field: 'year_fiscal_funding',
					interval: 2,
					keyed: false,
					min_doc_count: 1
				}
			}
		}
	});
	return ctx;
}

export const selectingOptions = {
	actions: {
		selectFields: assign(selectFields),
		selectNextField: assign(selectNextField),
		selectPreviousField: assign(selectPreviousField),
		sendQueryUpdated: send('QUERY_UPDATED'),
		toggleField: assign(toggleField),
		updateQuery: assign(updateQuery),
	},
	guards: {
	}
};
